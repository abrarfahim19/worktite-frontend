{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Typescript default React component": {
    "scope": "typescriptreact",
    "prefix": "rfcd",
    "body": [
      "import React, { FC } from 'react'",
      "",
      "import { ClassPropertiess } from '@/ui/common/interface';",
      "",
      "interface ${TM_FILENAME_BASE}Props {",
      "",
      "}",
      "const ${TM_FILENAME_BASE}Class: ClassPropertiess = {",
      "\t${1:divClass}: '',",
      "};",
      "",
      "const ${TM_FILENAME_BASE}: FC<${TM_FILENAME_BASE}Props> = ({ $2 }) => {",
      "\treturn <div className={${TM_FILENAME_BASE}Class.${1:divClass}}></div>;",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "Create a custom class object with a component"
  }
}
